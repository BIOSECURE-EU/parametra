---
title: "Bibliometric report"
date: last-modified
date-format: "[Last Updated on] dddd D MMMM, YYYY [(]HH:mm:ss[)]"
author: "Natalia Ciria"
editor: visual
format:
  html:
    embed-resources: true
    code-tools: true
    code-fold: true
    code-block-border-left: true
execute:
  warning: false
  message: false
---

## Set up

```{r}
library(rcrossref)
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(parametra)

review<-unique(parametra_long[c("doi")])

if(file.exists("data-raw/crossref_data")){
  load("data-raw/crossref_data")
}else{
  dois_works <- rcrossref::cr_works(dois = unique(parametra_long$doi))
  crossref_data<-purrr::pluck(dois_works$data)
  save(crossref_data, file="data-raw/crossref_data")
}
```

```{r, results='asis'}
cat(
  paste0(paste("- Review documents:", nrow(review),"\n"),
         paste("- Review DOIs:", length(unique(review$doi)),"\n"),
         paste("- DOIs found in Crossref:", length(unique(crossref_data$doi)),"\n")))
```

## Crossref data

### Clean data

```{r}
crossref_data<-crossref_data%>%
  mutate(year=as.numeric(substr(issued,1,4)),
         row_id=as.character(row_number()),
         duplicated=duplicated(doi))%>%
  filter(!duplicated)
```

### Summary

```{r, results='asis'}
cat(
  paste0(paste("- Time spam:", min(crossref_data$year), "-", max(crossref_data$year),"\n"),
  paste("- Sources:", length(unique(crossref_data$container.title)),"\n"),
  paste("- Documents:", length(unique(crossref_data$title)),"\n"),
  paste("- Document average age:", mean(as.numeric(format(Sys.time(), "%Y"))-crossref_data$year),"\n"),
  paste("- Average citations per document:", mean(as.numeric(crossref_data$is.referenced.by.count)),"\n"),
  paste("- Average citations per document:", mean(as.numeric(crossref_data$is.referenced.by.count)/(as.numeric(format(Sys.time(), "%Y"))-crossref_data$year)),"\n")))
```

### Publications per year

```{r}
crossref_data%>%
  ggplot(aes(x=year)) +
  geom_bar() +
  scale_x_continuous(breaks = seq(min(crossref_data$year), max(crossref_data$year), by=2)) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

### Average article citations per year

```{r}
crossref_data%>%
  group_by(year)%>%
  summarise(n = mean(as.numeric(`is.referenced.by.count`)))%>%
  mutate(year=as.numeric(year))%>%
  ggplot(aes(x=year, y=n)) +
  geom_col()+
  scale_x_continuous(breaks = seq(min(crossref_data$year), max(crossref_data$year), by=2)) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(y = "Average Citations")
```

### Most Productive Authors

```{r}
authors<-lapply(1:nrow(crossref_data), function(x) crossref_data$author[[x]])

authors<-bind_rows(authors, .id = "row_id")

authors <- authors %>%
  mutate(given = toupper(gsub("([A-Z])[a-z]+\\s*", "\\1.", given)),
         Author = paste(given, family)) 

first_authors<-authors%>%
  filter(sequence=="first")

authors <- authors %>%
  group_by(Author) %>%
  summarise(n = n(),
            first = sum(sequence=="first"),
            additional = sum(sequence=="additional")) %>%
  arrange(desc(n))

authors_long <- authors %>%
  filter(!is.na(Author))%>%
  pivot_longer(
    cols = c(first, additional),
    names_to = "Type",
    values_to = "value"
  )

authors_long%>% 
  slice_max(n, n = 40)%>%
  ggplot(aes(y=reorder(Author,value), x=value, fill=Type)) +
  geom_col()+
  geom_text(aes(label= n, x=n), hjust=-0.4) +
  theme_minimal()+
  theme(axis.title.y = element_blank())+
  labs(x = "Count of documents")+
  scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
```

### Most Cited Manuscripts

```{r}
truncate_title <- function(string, max_length = 30) {
  vapply(string, function(x) {
    if (nchar(x) <= max_length) return(x)
    
    words <- unlist(strsplit(x, " "))
    result <- words[1]
    
    for (word in words[-1]) {
      if (nchar(paste(result, word)) <= max_length) {
        result <- paste(result, word)
      } else {
        break
      }
    }
    
    result
  }, character(1))
}

crossref_data%>%
  left_join(first_authors,by="row_id")%>%
  mutate(Manuscript=paste0(Author," (", year,") ",truncate_title(title)),
         n=as.numeric(`is.referenced.by.count`))%>%
  arrange(desc(n))%>%
  select(Manuscript,n)%>%
  filter(!is.na(Manuscript))%>%
  slice_max(n, n = 20)%>%
  ggplot(aes(y=reorder(Manuscript,n), x=n)) +
  geom_col()+
  geom_text(aes(label=n), hjust=-0.4) +
  theme_minimal()+
  theme(axis.title.y = element_blank())+
  labs(x = "Count of citations")+
  scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
```

### Most Relevant Sources

```{r, fig.width=10, fig.height=8}
journals<-crossref_data%>%
  group_by(Journal=short.container.title)%>%
  summarize(journal_n=n())

journals<-crossref_data%>%
  group_by(Journal=short.container.title,Publisher=publisher)%>%
  summarize(n=n())%>%
  left_join(journals)%>%
  arrange(desc(n))%>%
  ungroup()%>%
  filter(!is.na(Journal))%>%
  slice_max(n, n = 20)

journals%>%
  ggplot(aes(y=reorder(Journal,journal_n), x=n, fill=Publisher)) +
  geom_col()+
  geom_text(aes(label=journal_n,x=journal_n), hjust=-0.4) +
  scale_fill_brewer(palette="Set3") +
  theme_minimal()+
  scale_x_continuous(expand = expansion(mult = c(0, 0.1)))+
  theme(legend.position = "bottom",
      axis.title.y = element_blank()) +
  guides(fill = guide_legend(nrow = ceiling(length(unique(journals$Publisher))/2)))+
  labs(x = "Count of documents")
```

## WOS data

```{r, results='asis'}
library(bibliometrix)
#wos_files<-list.files(path="wos_data",pattern="txt", all.files=TRUE,recursive = TRUE)
#wos_files<-paste("wos_data", wos_files,sep="/")
# Converting the loaded files into a R bibliographic dataframe
wos_data<- convert2df(file="data-raw/parametra_wos.txt", dbsource = "wos", format = "plaintext")

cat(
  paste0(paste("- Review documents:", nrow(review),"\n"),
         paste("- Review DOIs:", length(unique(review$doi)),"\n"),
         paste("- DOIs found in Crossref:", length(unique(crossref_data$doi)),"\n"),
         paste("- DOIs found in WOS:", length(unique(wos_data$DI)),"\n"),
         paste("- Documents found in WOS:", nrow(wos_data),"\n")
         ))
```

### Co-citation analysis

```{r}
NetMatrix <- biblioNetwork(wos_data, analysis = "co-citation", network = "references", sep = ";")

net=networkPlot(NetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE,  remove.isolates = TRUE, labelsize=1,edgesize = 10, edges.min=1)
```

### Cross WOS and Crossref data

```{r}
data<-crossref_data %>%left_join(wos_data, by = c("doi" = "DI"))
```
